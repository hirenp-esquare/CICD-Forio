# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
    
      - name: Extract branch name
        #shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
        
      - name: Set project name
        id: setProjectName
        run: |
          if ${{ steps.extract_branch.outputs.branch == 'main'}} ; then
            echo "::set-output name=ProjectName::va-psd-Simtemp"
          elif ${{ steps.extract_branch.outputs.branch == 'Test'}}; then 
            echo "::set-output name=ProjectName::va-psd-Testtemp"
          elif ${{ steps.extract_branch.outputs.branch == 'Dev'}}; then 
            echo "::set-output name=ProjectName::va-psd-dev"
          fi
          
      - name: get Token
        id: setAToken
        run: |
          responseToken=$(curl --request POST \
                        --url https://api.forio.com/v2/oauth/token \
                        --header 'authorization: Basic ${{ secrets.PROJECTTOKEN}}' \
                        --header 'cache-control: no-cache' \
                        --header 'content-type: application/x-www-form-urlencoded' \
                        --data =)
          echo "::add-mask::$responseToken"
          echo "::set-output name=AToken::$responseToken}}"
      
      - name: Pull to Epicenter
        run: |
          curl --request POST \
          --url https://api.forio.com/api/v3/va/${{steps.setProjectName.outputs.ProjectName}}/git/pull \
          --header 'authorization: Bearer ${{ fromJson(steps.setAToken.outputs.AToken).access_token}} ' \
          --header 'cache-control: no-cache' \
          --header 'content-type: application/json' \
          --data '{}'
     
     
       
      
